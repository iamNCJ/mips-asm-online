{"version":3,"sources":["asm.js","App.js","serviceWorker.js","index.js"],"names":["op_set","R_basic","R_plus","ops","length","Error","rs","reg","undefined","parseInt","I_basic","I_mem","rt","imm","immediate","toString","slice","J_basic","parse","ins","isHex","labelList","res","i","len","curLine","ins_code","toUpperCase","err","name","ParseError","message","regs","push","func","shamt","op","isNaN","addr","lineNum","params","captureStackTrace","assemble","mipsCode","isDebug","lines","trim","split","insList","pendingLabel","j","search","singleLine","replace","k","_len","currentLabel","singleIns","stackTokens","childrenGap","App","onChange","newValue","setState","code","errorLine","editor","deltaDecorations","state","editorDidMount","onChangeDebug","ev","checked","debug","assembleBtnFunc","getValue","result","console","log","range","Range","options","isWholeLine","className","saveToFile","blob","Blob","type","saveAs","theme","this","id","Stack","horizontal","tokens","PrimaryButton","text","onClick","DefaultButton","Toggle","label","inlineLabel","onText","offText","height","width","language","value","selectOnLineNumbers","roundedSelection","readOnly","cursorStyle","automaticLayout","Text","map","key","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","href","src","alt","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.3953450a.chunk.js","sourcesContent":["function assemble(mipsCode: string, isDebug: boolean = true): string {\n    let res = '';\n    const lines = mipsCode.trim().split('\\n');\n    let insList = [];\n    let labelList = {};\n    let pendingLabel = '';\n    for (let i = 0, len = lines.length; i < len; i++) {\n        // Remove '//' comments\n        let j = lines[i].search('//');\n        if (j >= 0) {\n            lines[i] = lines[i].slice(0, j);\n        }\n        // Remove '#' comments\n        j = lines[i].search('#')\n        if (j >= 0) {\n            lines[i] = lines[i].slice(0, j);\n        }\n        let singleLine = lines[i].replace(/:/g, ':;').split(';');\n        for (let k = 0, _len = singleLine.length; k < _len; k++) {\n            if (singleLine[k][singleLine[k].length - 1] === ':') { // label\n                if (pendingLabel === '') {\n                    let currentLabel = singleLine[k].replace(':', ' ').trim();\n                    if (!isNaN(parseInt(currentLabel))) { // starts with number\n                        throw new ParseError(i + 1, 'Illegal label: Label: ' + currentLabel);\n                    } else if (labelList[currentLabel] === undefined) {\n                        pendingLabel = currentLabel;\n                    } else {\n                        throw new ParseError(i + 1, 'Label already defined: Label: ' + currentLabel +\n                            ', old address: ' + (labelList[currentLabel] * 4).toString() + ', new address: ' + (insList.length * 4).toString());\n                    }\n                } else { // has pending label\n                    throw new ParseError(i + 1, 'Multiple pending label: Pending label: ' + pendingLabel +\n                        ', new label: ' + singleLine[k].replace(':', ' ').trim());\n                }\n            } else { // instruction\n                let singleIns = singleLine[k].replace(/,/g, ' ').replace(/\\(/g, ' ')\n                    .replace(/\\)/g, ' ').trim().split(/\\s+/);\n                if (singleIns.length === 1 && singleIns[0] === \"\") continue; // ignore comment or empty line\n                singleIns.push(i); // push line number for error result\n                insList.push(singleIns);\n                if (pendingLabel !== '') {\n                    labelList[pendingLabel] = insList.length - 1;\n                    pendingLabel = '';\n                }\n            }\n        }\n    }\n    if (isDebug) {\n        res += \"Debug:\\n\";\n    } else {\n        res += \"memory_initialization_radix=16;\\nmemory_initialization_vector=\\n\";\n    }\n    try {\n        res += parse(insList, !isDebug, labelList);\n    } catch (err) {\n        throw err;\n    }\n    return res;\n}\n\nconst op_set = {\n    // R-type\n    'add': R_basic, 'addu': R_basic, 'sub': R_basic, 'subu': R_basic, 'and': R_basic, 'or': R_basic, 'xor': R_basic,\n    'nor': R_basic, 'slt': R_basic, 'sltu': R_basic, 'sllv': R_basic, 'srlv': R_basic, 'srav': R_basic,\n    'sll': R_plus, 'srl': R_plus, 'sra': R_plus, 'jr': R_jr,\n    // I-type\n    'addi': I_basic, 'addiu': I_basic, 'andi': I_basic, 'ori': I_basic, 'xori': I_basic, 'slti': I_basic, 'sltiu': I_basic,\n    'beq': I_basic, 'bne': I_basic, 'lw': I_mem, 'sw': I_mem, 'lui': I_lui,\n    // J-type\n    'j': J_basic, 'jal': J_basic,\n    'eret': Eret\n};\n\nconst reg = {\n    '$zero': \"00000\", '$at': \"00001\", '$v0': \"00010\", '$v1': \"00011\", '$a0': \"00100\", '$a1': \"00101\", '$a2': \"00110\",\n    '$a3': \"00111\", '$t0': \"01000\", '$t1': \"01001\", '$t2': \"01010\", '$t3': \"01011\", '$t4': \"01100\", '$t5': \"01101\",\n    '$t6': \"01110\", '$t7': \"01111\", '$s0': \"10000\", '$s1': \"10001\", '$s2': \"10010\", '$s3': \"10011\", '$s4': \"10100\",\n    '$s5': \"10101\", '$s6': \"10110\", '$s7': \"10111\", '$t8': \"11000\", '$t9': \"11001\", '$k0': \"11010\", '$k1': \"11011\",\n    '$gp': \"11100\", '$sp': \"11101\", '$fp': \"11110\", '$ra': \"11111\"\n};\n\nfunction parse(ins: Array, isHex: boolean = true, labelList: JSON = {}): string {\n    let res = \"\";\n    for (let i = 0, len = ins.length; i < len; i++) {\n        const curLine = ins[i][ins[i].length - 1] + 1;\n        try {\n            ins[i][ins[i].length - 1] = i; // change last element from lineNum to insNum\n            let ins_code = op_set[ins[i][0]](ins[i], labelList);\n            if (isHex) { // to Hex\n                res += ('00000000' + ins_code.toString(16).toUpperCase()).slice(-8);\n                if (i !== len - 1) {\n                    res += \", \";\n                    if (i % 8 === 7) {\n                        res += \"\\n\";\n                    }\n                } else {\n                    res += \";\";\n                }\n            } else { // to Binary\n                res += i.toString() + \": \" + ('00000000000000000000000000000000' +\n                    ins_code.toString(2)).slice(-32) + \"\\n\";\n            }\n        } catch (err) {\n            if (err.name === 'TypeError') {\n                throw new ParseError(curLine, \"no such instruction '\" + ins[i][0] + \"'\");\n            } else {\n                throw new ParseError(curLine, err.message);\n            }\n        }\n    }\n    return res;\n}\n\nfunction R_basic(ops: Array): number {\n    if (ops.length !== 5) { // ins rs, rt, rd, ins-num\n        throw Error(\"R-type instruction `\" + ops[0] + \"` needs rs, rt, rd\");\n    }\n    let regs = [];\n    for (let i = 1; i < 4; i++) {\n        regs.push(reg[ops[i]]);\n        if (regs[i - 1] === undefined) {\n            throw Error(\"Register '\" + ops[i] + \"' not exist\");\n        }\n    }\n    const funcCodes = {\n        'add': '100000',\n        'addu': '100001',\n        'sub': '100010',\n        'subu': '100011',\n        'and': '100100',\n        'or': '100101',\n        'xor': '100110',\n        'nor': '100111',\n        'slt': '101010',\n        'sltu': '101011',\n        'sllv': '000100',\n        'srlv': '000110',\n        'srav': '000111'\n    };\n    const op = '000000', sh_amt = '00000', func = funcCodes[ops[0]];\n    return parseInt(op + regs[1] + regs[2] + regs[0] + sh_amt + func, 2);\n}\n\nfunction R_plus(ops: Array): number {\n    if (ops.length !== 5) { // ins rs, rt, shamt, ins-num\n        throw Error(\"R-type instruction `\" + ops[0] + \"` needs rs, rt, rd\");\n    }\n    let regs = [];\n    for (let i = 1; i < 3; i++) {\n        regs.push(reg[ops[i]]);\n        if (regs[i - 1] === undefined) {\n            throw Error(\"Register '\" + ops[i] + \"' not exist\");\n        }\n    }\n    const funcCodes = {\n        'sll': '000000', 'srl': '000010', 'sra': '000011'\n    };\n    const func = funcCodes[ops[0]];\n    const immediate = parseInt(ops[3]);\n    if (immediate > 31 || immediate < 0) {\n        throw Error('Illegal operand: Shift amount length out of range');\n    }\n    const shamt = ('00000' + immediate.toString(2)).slice(-5);\n    return parseInt('00000000000' + regs[1] + regs[0] + shamt + func, 2);\n}\n\nfunction R_jr(ops: Array): number {\n    if (ops.length !== 3) { // jr rs ins-num\n        throw Error(\"I-type instruction `\" + ops[0] + \"` needs rs\");\n    }\n    const rs = reg[ops[1]];\n    if (rs === undefined) {\n        throw Error(\"Register '\" + ops[1] + \"' not exist\");\n    }\n    return parseInt(\"000000\" + rs + \"000000000000000001000\", 2);\n}\n\nfunction I_basic(ops: Array, labelList: JSON): number {\n    if (ops.length !== 5) { // ins rs, rt, immediate, ins-num\n        throw Error(\"I-type instruction `\" + ops[0] + \"` needs rs, rt, imm\");\n    }\n    const opCodes = {\n        'addi': '001000',\n        'addiu': '001001',\n        'andi': '001100',\n        'ori': '001110',\n        'xori': '001110',\n        'slti': '001010',\n        'sltiu': '001011',\n        'beq': '000100',\n        'bne': '000101'\n    };\n    const op = opCodes[ops[0]];\n    let regs = [];\n    for (let i = 1; i < 3; i++) {\n        regs.push(reg[ops[i]]);\n        if (regs[i - 1] === undefined) {\n            throw Error(\"Register '\" + ops[i] + \"' not exist\");\n        }\n    }\n    let immediate = parseInt(ops[3]);\n    if (isNaN(immediate)) { // must be a label\n        immediate = labelList[ops[3]] - ops[4] - 1; // pc + 4 + offset * 4\n        if (isNaN(immediate)) { // no such label\n            throw Error(\"Undefined label: Label name: \" + ops[3]);\n        }\n    }\n    let imm = '';\n    if (immediate >= 0 && immediate <= 65535) {\n        imm = ('0000000000000000' + immediate.toString(2)).slice(-16);\n    } else if (immediate <= 0 && immediate >= -32768) {\n        imm = ((-1 - immediate) ^ (2 ** 16 - 1)).toString(2);\n    } else {\n        throw Error('Illegal operand: Immediate length too long');\n    }\n    return parseInt(op + regs[1] + regs[0] + imm, 2);\n}\n\nfunction I_mem(ops: Array): number {\n    if (ops.length !== 5) { // ins rs rt imm ins-num\n        throw Error(\"I-type instruction `\" + ops[0] + \"` needs rs, rt, immediate\");\n    }\n    const opCodes = {\n        'lw': '100011',\n        'sw': '101011'\n    }\n    const op = opCodes[ops[0]];\n    const rs = reg[ops[3]];\n    if (rs === undefined) {\n        throw Error(\"Register '\" + ops[3] + \"' not exist\");\n    }\n    const rt = reg[ops[1]];\n    if (rt === undefined) {\n        throw Error(\"Register '\" + ops[1] + \"' not exist\");\n    }\n    let imm = '', immediate = parseInt(ops[2]);\n    if (immediate >= 0 && immediate <= 65535) {\n        imm = ('0000000000000000' + immediate.toString(2)).slice(-16);\n    } else if (immediate <= 0 && immediate >= -32768) {\n        imm = ((-1 - immediate) ^ (2 ** 16 - 1)).toString(2);\n    } else {\n        throw Error('Illegal operand: Immediate length too long');\n    }\n    return parseInt(op + rs + rt + imm, 2);\n}\n\nfunction I_lui(ops: Array): number {\n    if (ops.length !== 4) { // lui rt imm ins-num\n        throw Error(\"I-type instruction `\" + ops[0] + \"` needs rt, immediate\");\n    }\n    const rt = reg[ops[1]];\n    if (rt === undefined) {\n        throw Error(\"Register '\" + ops[1] + \"' not exist\");\n    }\n    let imm = '', immediate = parseInt(ops[2]);\n    if (immediate >= 0 && immediate <= 65535) {\n        imm = ('0000000000000000' + immediate.toString(2)).slice(-16);\n    } else if (immediate <= 0 && immediate >= -32768) {\n        imm = ((-1 - immediate) ^ (2 ** 16 - 1)).toString(2);\n    } else {\n        throw Error('Illegal operand: Immediate length too long');\n    }\n    return parseInt('00111100000' + rt + imm, 2);\n}\n\nfunction J_basic(ops: Array, labelList: JSON):number {\n    if (ops.length !== 3) { // ins addr ins-num\n        throw Error(\"J-type instruction `\" + ops[0] + \"` needs address\");\n    }\n    const opCodes = {\n        'j': '000010',\n        'jal': '000011'\n    }\n    const op = opCodes[ops[0]];\n    let immediate = parseInt(ops[1]);\n    if (isNaN(immediate)) { // must be a label\n        immediate = labelList[ops[1]];\n        if (isNaN(immediate)) { // no such label\n            throw Error(\"Undefined label: Label name: \" + ops[1]);\n        } else if (immediate.toString(2).slice(0, 4) !== ops[2].toString(2).slice(0, 4)) {\n            // The upper 4 bits of the current PC register should be the same as the label's address's upper 4 bits\n            // throw Error(\"Label \" + ops[1] + \" out of range\"); // FIXME Unable to judge simply according to line number\n        }\n    }\n    let addr = '';\n    if (immediate >= 0 && immediate <= 67108863) {\n        addr = ('00000000000000000000000000' + immediate.toString(2)).slice(-26);\n    } else {\n        throw Error('Illegal address: address ' + ops[1] + ' out of range');\n    }\n    return parseInt(op + addr, 2);\n}\n\nfunction Eret():number {\n    return 0x02000018;\n}\n\nclass ParseError extends Error {\n    constructor(lineNum: number, ...params) {\n        // Pass remaining arguments (including vendor specific ones) to parent constructor\n        super(...params);\n\n        // Maintains proper stack trace for where our error was thrown (only available on V8)\n        if (Error.captureStackTrace) {\n            Error.captureStackTrace(this, ParseError);\n        }\n\n        this.name = 'ParseError';\n        // Custom debugging information\n        this.lineNum = lineNum;\n    }\n}\n\n// module.exports = {\n//     assemble\n// }\n\nexport default assemble;","import React from 'react';\nimport MonacoEditor from 'react-monaco-editor';\nimport {Range} from 'monaco-editor';\nimport {DefaultButton, Stack, IStackTokens, Text, Toggle, PrimaryButton} from \"office-ui-fabric-react\";\nimport { saveAs } from 'file-saver';\n\nimport \"./App.css\"\nimport assemble from \"./asm\"\n\nconst stackTokens: IStackTokens = {childrenGap: 40};\n\nclass App extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            code: \"# type your code... \\n\",\n            debug: false,\n            theme: \"vs-dark\",\n            result: \"Result\",\n            errorLine: []\n        };\n    }\n\n    onChange = (newValue) => {\n        this.setState({\n            code: newValue,\n            errorLine: this.editor.deltaDecorations(this.state.errorLine, [])\n        });\n        // this.state.errorLine\n        // console.log(\"onChange\", newValue); // eslint-disable-line no-console\n    };\n\n    editorDidMount = (editor) => {\n        // eslint-disable-next-line no-console\n        // console.log(\"editorDidMount\", editor, editor.getValue(), editor.getModel());\n        this.editor = editor;\n    };\n\n    onChangeDebug = (ev: React.MouseEvent<HTMLElement>, checked: boolean) => {\n        this.setState({\n            debug: checked\n        });\n    }\n\n    assembleBtnFunc = () => {\n        if (this.editor) {\n            const code = this.editor.getValue();\n            try {\n                this.setState({\n                        result: assemble(code, this.state.debug)\n                    }\n                );\n            } catch (err) {\n                if (err.name === 'ParseError') {\n                    console.log();\n                    this.setState({\n                            result: err.name + ': Line ' + err.lineNum + ': ' + err.message,\n                            errorLine: this.editor.deltaDecorations(this.state.errorLine, [{\n                                range: new Range(err.lineNum, 1, err.lineNum, 1),\n                                options: {\n                                    isWholeLine: true,\n                                    className: 'ErrorLine'\n                                }\n                            }])\n                        }\n                    );\n                }\n            }\n        }\n    };\n\n    saveToFile = () => {\n        var blob = new Blob([this.state.result], { type: \"text/plain;charset=utf-8\" });\n        saveAs(blob, \"asm.coe\");\n    }\n\n    render() {\n        const {code, theme} = this.state;\n        const options = {\n            selectOnLineNumbers: true,\n            roundedSelection: false,\n            readOnly: false,\n            cursorStyle: \"line\",\n            automaticLayout: false,\n        };\n        return (\n            <div>\n                <div id=\"control\">\n                    <Stack horizontal tokens={stackTokens}>\n                        <PrimaryButton text=\"Assemble\" onClick={this.assembleBtnFunc}/>\n                        <DefaultButton text=\"Save to File\" onClick={this.saveToFile}/>\n                        <Toggle label=\"Debug Mode\" inlineLabel onText=\"On\" offText=\"Off\" onChange={this.onChangeDebug}/>\n                    </Stack>\n                </div>\n                <hr/>\n                <div id=\"editor\">\n                    <MonacoEditor\n                        height=\"400\"\n                        width=\"100%\"\n                        language=\"mips\"\n                        value={code}\n                        options={options}\n                        onChange={this.onChange}\n                        editorDidMount={this.editorDidMount}\n                        theme={theme}\n                    />\n                </div>\n\n                <hr/>\n                <div id=\"result\">\n                    <Text>\n                        {this.state.result.split(\"\\n\").map((i, key) => {\n                            return <div key={key}>{i}</div>;\n                        })}\n                    </Text>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <React.StrictMode>\n        <h1>\n            MIPS Assembler Online\n            <a href=\"https://github.com/iamNCJ/mips-asm-online/stargazers\" id=\"star\">\n                <img src=\"https://img.shields.io/github/stars/iamNCJ/mips-asm-online.svg?label=Stars&style=social\" alt=\"Stars\" />\n            </a>\n        </h1>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}